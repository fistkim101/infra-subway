name: production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    name: test
    steps:
      - name: checks-out this repository under GITHUB_WORKSPACE(enable to access)
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          submodules: true

      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: grant execute permission for gradlew
        run: chmod +x gradlew

      - name: test with Gradle
        run: ./gradlew test

  docker_image_build_and_push:
    runs-on: ubuntu-latest
    needs: [ test ]
    name: docker build and push
    steps:
      - name: checks-out this repository under GITHUB_WORKSPACE(enable to access)
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          submodules: true

      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: grant execute permission for gradlew
        run: chmod +x gradlew

      - name: test with Gradle
        run: ./gradlew build -x test

      - name: set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: docker image build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/infra-subway:latest

  load_test:
    runs-on: ubuntu-latest
    needs: [ test, docker_image_build_and_push ]
    name: Run k6 test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run k6 local test
        uses: k6io/action@v0.1
        with:
          filename: ./test-script/lending/smoke.js

  slack_notification:
    runs-on: ubuntu-latest
    needs: [ test, docker_image_build_and_push ]
    name: slack notification
    steps:
      - uses: actions/checkout@v2
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}